<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bmg.mall.dao.bmgPayMapper">
    <resultMap id="BaseResultMap" type="com.bmg.mall.entity.bmgPay">
        <id column="pay_id" jdbcType="BIGINT" property="payId"/>
        <result column="out_trade_no" jdbcType="VARCHAR" property="outTradeNo"/>
        <result column="pay_no" jdbcType="VARCHAR" property="payNo"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="total_amount" jdbcType="INTEGER" property="totalAmount"/>
        <result column="pay_type" jdbcType="TINYINT" property="payType"/>
        <result column="is_deleted" jdbcType="TINYINT" property="isDeleted"/>
        <result column="pay_time" jdbcType="TIMESTAMP" property="payTime"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
    pay_id, out_trade_no, pay_no, remark, user_id, total_amount, pay_type, pay_time, is_deleted, create_time, update_time
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from bmg_order_address
        where address_id = #{addressId,jdbcType=BIGINT}
    </select>
    <select id="selectByPrimaryKeys" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from bmg_order
        where order_id in
        <foreach collection="orderIds" item="item" index="index"
                 open="(" separator="," close=")">#{item}
        </foreach>
    </select>


    <select id="selectByOutTradeNo" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from bmg_pay
        where out_trade_no = #{outTradeNo,jdbcType=VARCHAR} and is_deleted=0 limit 1
    </select>

    <select id="getTotalbmgPay" parameterType="Map" resultType="int">
        select count(*) from bmg_pay
        <where>
            <if test="outTradeNo!=null and outTradeNo!=''">
                and out_trade_no = #{outTradeNo}
            </if>
            <if test="userId!=null and userId!=''">
                and user_id = #{userId}
            </if>
            <if test="isDeleted!=null and isDeleted!=''">
                and is_deleted = #{isDeleted}
            </if>
            <if test="startTime != null and startTime.trim() != ''">
                and create_time &gt; #{startTime}
            </if>
            <if test="endTime != null and endTime.trim() != ''">
                and create_time &lt; #{endTime}
            </if>
        </where>
    </select>

    <select id="findbmgPayList" parameterType="Map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from bmg_pay
        <where>
            <if test="outTradeNo!=null and outTradeNo!=''">
                and out_trade_no = #{outTradeNo}
            </if>
            <if test="userId!=null and userId!=''">
                and user_id = #{userId}
            </if>
            <if test="isDeleted!=null and isDeleted!=''">
                and is_deleted = #{isDeleted}
            </if>
            <if test="startTime != null and startTime.trim() != ''">
                and create_time &gt; #{startTime}
            </if>
            <if test="endTime != null and endTime.trim() != ''">
                and create_time &lt; #{endTime}
            </if>
        </where>
        order by create_time desc
        <if test="start!=null and limit!=null">
            limit #{start},#{limit}
        </if>
    </select>



    <update id="updateByPrimaryKey" parameterType="java.lang.Long">
    update bmg_pay set pay_type=1
    where pay_id = #{payId,jdbcType=BIGINT} and is_deleted=0
  </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.bmg.mall.entity.bmgPay">
        update bmg_pay
        <set>
            <if test="outTradeNo != null">
                out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
            </if>
            <if test="payNo != null">
                pay_no = #{payNo,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="totalAmount != null">
                total_amount = #{totalAmount,jdbcType=TINYINT},
            </if>
            <if test="payType != null">
                pay_type = #{payType,jdbcType=TINYINT},
            </if>
            <if test="payTime != null">
                pay_time = #{payTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where pay_id = #{payId,jdbcType=BIGINT} and is_deleted=0
    </update>



    <insert id="insert" parameterType="com.bmg.mall.entity.bmgOrderAddress">
    insert into bmg_order_address (address_id,order_id, order_no, user_id,
      express_status, express_number, send_type,
      user_address,is_deleted, create_time, update_time
      )
    values (#{addressId,jdbcType=BIGINT},#{orderId,jdbcType=BIGINT}, #{orderNo,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT},
      #{expressStatus,jdbcType=VARCHAR},#{expressNumber,jdbcType=VARCHAR},#{sendType,jdbcType=TINYINT},
       #{userAddress,jdbcType=VARCHAR},#{isDeleted,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="payId"
            parameterType="com.bmg.mall.entity.bmgPay">
        insert into bmg_pay
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="payId != null">
                pay_id,
            </if>
            <if test="outTradeNo != null">
                out_trade_no,
            </if>
            <if test="payNo != null">
                pay_no,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="totalAmount != null">
                total_amount,
            </if>
            <if test="payType != null">
                pay_type,
            </if>
            <if test="isDeleted != null">
                is_deleted,
            </if>
            <if test="payTime != null">
                pay_time,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="payId != null">
                #{payId,jdbcType=BIGINT},
            </if>
            <if test="outTradeNo != null">
                #{outTradeNo,jdbcType=VARCHAR},
            </if>
            <if test="payNo != null">
                #{payNo,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="totalAmount != null">
                #{totalAmount,jdbcType=INTEGER},
            </if>
            <if test="payType != null">
                #{payType,jdbcType=TINYINT},
            </if>
            <if test="isDeleted != null">
                #{isDeleted,jdbcType=TINYINT},
            </if>
            <if test="payTime != null">
                #{payTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

</mapper>